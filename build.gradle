/*
 * ProxyQueues, a Velocity queueing solution
 *
 * Copyright (c) 2021 James Lyne
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'maven-publish'
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://nexus.velocitypowered.com/repository/maven-public/' }
        maven { url 'https://repo.not-null.co.uk/releases/' }
    }

    compileJava {
        options.compilerArgs += ["-Xlint:all", "-Xlint:-processing"]
        options.encoding = 'UTF-8'
    }
}

dependencies {
    implementation project(":ProxyQueuesAPI")
    implementation 'ch.jalu:configme:1.1.0'
    implementation 'cloud.commandframework:cloud-velocity:1.5.0'
    implementation 'cloud.commandframework:cloud-minecraft-extras:1.5.0'
    implementation 'cloud.commandframework:cloud-annotations:1.5.0'

    compileOnly 'org.spongepowered:configurate-yaml:3.6'
    compileOnly 'com.intellij:annotations:12.0'
    compileOnly 'com.velocitypowered:velocity-api:3.0.0'
    compileOnly 'uk.co.notnull:PlatformDetection-velocity:2.0'
    compileOnly 'uk.co.notnull:ProxyDiscordAPI:1.0'
    compileOnly 'io.prometheus:simpleclient_common:0.11.0'

    annotationProcessor 'com.velocitypowered:velocity-api:3.0.0'
}

group = 'uk.co.notnull'
version = '1.1-SNAPSHOT'
description = 'Velocity queueing solution'

java.sourceCompatibility = JavaVersion.VERSION_11
java.targetCompatibility = JavaVersion.VERSION_11

tasks {
    processResources {
        from("${project.rootDir}/src/main/resources") {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE
            project.properties.findAll().each {
                prop ->
                    if (prop.value != null && prop.value instanceof java.lang.String) {
                        filter(ReplaceTokens, tokens: [(prop.key): prop.value])
                        filter(ReplaceTokens, tokens: [('project.' + prop.key): prop.value])
                    }
            }
        }
    }

    shadowJar {
        archiveClassifier.set('')
        relocate 'cloud.commandframework', 'uk.co.notnull.proxyqueues.shaded.cloud'
        relocate 'io.leangen.geantyref', 'uk.co.notnull.proxyqueues.shaded.typetoken'
    }

    build {
        dependsOn(shadowJar)
    }
}
